[{"/Users/boyeon/Desktop/quotes/src/index.js":"1","/Users/boyeon/Desktop/quotes/src/Components/App.js":"2","/Users/boyeon/Desktop/quotes/src/fbase.js":"3","/Users/boyeon/Desktop/quotes/src/Components/Router.js":"4","/Users/boyeon/Desktop/quotes/src/Routes/Auth.js":"5","/Users/boyeon/Desktop/quotes/src/Routes/Home.js":"6","/Users/boyeon/Desktop/quotes/src/Routes/CreateAccount.js":"7","/Users/boyeon/Desktop/quotes/src/Components/Navigation.js":"8","/Users/boyeon/Desktop/quotes/src/Components/Quote.js":"9","/Users/boyeon/Desktop/quotes/src/Components/favoriteAuthorEdit.js":"10","/Users/boyeon/Desktop/quotes/src/Routes/MyProfile.js":"11","/Users/boyeon/Desktop/quotes/src/Routes/Profile.js":"12","/Users/boyeon/Desktop/quotes/src/Components/MyQuotes.js":"13","/Users/boyeon/Desktop/quotes/src/Components/UserQuotes.js":"14"},{"size":229,"mtime":1606909350898,"results":"15","hashOfConfig":"16"},{"size":1340,"mtime":1607352646525,"results":"17","hashOfConfig":"16"},{"size":632,"mtime":1607350065982,"results":"18","hashOfConfig":"16"},{"size":1782,"mtime":1608106554685,"results":"19","hashOfConfig":"16"},{"size":3461,"mtime":1607971071112,"results":"20","hashOfConfig":"16"},{"size":4376,"mtime":1608108002277,"results":"21","hashOfConfig":"16"},{"size":1736,"mtime":1607594086184,"results":"22","hashOfConfig":"16"},{"size":334,"mtime":1608106553175,"results":"23","hashOfConfig":"16"},{"size":3764,"mtime":1608106165660,"results":"24","hashOfConfig":"16"},{"size":1515,"mtime":1607352725326,"results":"25","hashOfConfig":"16"},{"size":6126,"mtime":1608110574443,"results":"26","hashOfConfig":"16"},{"size":1602,"mtime":1607454843085,"results":"27","hashOfConfig":"16"},{"size":1753,"mtime":1607592388242,"results":"28","hashOfConfig":"16"},{"size":1837,"mtime":1607592274001,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"eso2q",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/boyeon/Desktop/quotes/src/index.js",[],["65","66"],"/Users/boyeon/Desktop/quotes/src/Components/App.js",[],["67","68"],"/Users/boyeon/Desktop/quotes/src/fbase.js",[],["69","70"],"/Users/boyeon/Desktop/quotes/src/Components/Router.js",[],"/Users/boyeon/Desktop/quotes/src/Routes/Auth.js",[],"/Users/boyeon/Desktop/quotes/src/Routes/Home.js",[],"/Users/boyeon/Desktop/quotes/src/Routes/CreateAccount.js",[],["71","72"],"/Users/boyeon/Desktop/quotes/src/Components/Navigation.js",[],"/Users/boyeon/Desktop/quotes/src/Components/Quote.js",["73"],"/Users/boyeon/Desktop/quotes/src/Components/favoriteAuthorEdit.js",["74"],"import React, { useState } from \"react\";\nimport { db } from \"../fbase\";\n\nconst FavoriteAuthorEdit = ({ favAuthorObj, authorListEditMode }) => {\n    const [editedFavAuthor, setEditedFavAuthor] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setEditedFavAuthor(value);\n    }\n\n    const onDeleteAuthorClick = async () => {\n        await db.doc(`fav-author/${favAuthorObj.id}`).delete()\n    }\n    const onSubmitEditedFavAuthor = async (event) => {\n        await db.doc(`fav-author/${favAuthorObj.id}`).update({\n            favoriteAuthor: editedFavAuthor,\n            updatedAt: Date.now(),\n        })\n        setEditedFavAuthor(\"\")\n        const authorListEditModeChange = (authorListEditMode) => !authorListEditMode\n    }\n    return (\n        <div className=\"profile-fav-author\">\n            {!authorListEditMode &&\n                <ul id=\"fav-author-list\">\n                    <li>{favAuthorObj.favoriteAuthor}</li>\n                </ul>}\n            {authorListEditMode &&\n                (<form onSubmit={onSubmitEditedFavAuthor}>\n                    <input onChange={onChange} value={editedFavAuthor} type=\"text\"\n                        placeholder={favAuthorObj.favoriteAuthor} />\n                    <input type=\"submit\" value=\"submit change\" />\n                    <button id=\"delete-fav-author\" onClick={onDeleteAuthorClick}>Delete</button>\n                </form>\n                )\n            }\n        </div>\n    )\n}\n\nexport default FavoriteAuthorEdit","/Users/boyeon/Desktop/quotes/src/Routes/MyProfile.js",[],"/Users/boyeon/Desktop/quotes/src/Routes/Profile.js",["75"],"import React, { useEffect, useState } from \"react\";\nimport UserQuotes from \"../Components/UserQuotes\";\nimport { db } from \"../fbase\";\n\nconst Profile = ({ profile, userObj }) => {\n    const [favWriters, setFavWriters] = useState([]);\n    const getProfile = async () => {\n        await db.collection('fav-author')\n            .where(\"creatorId\", \"==\", profile.id)\n            .orderBy(\"createdAt\")\n            .onSnapshot((shot) => {\n                const writersdb = shot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id\n                }\n                ))\n                setFavWriters(writersdb)\n            })\n    }\n    useEffect(() => {\n        getProfile();\n    }, [])\n    return (\n        <div>\n            <h4 className=\"user-name\">{profile.displayName}'s profile page</h4>\n\n            <div className=\"box\">\n                <div className=\"profile-fav-author\">\n                    <div>\n                        <h5 className=\"fav-authors\">{profile.displayName}'s Favorite Writers</h5>\n                        <ul>\n                            {favWriters.map(writer => (\n                                <li key={writer.id}>{writer.favoriteAuthor}</li>\n                            ))\n                            }\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"profile-quotes\">\n                    <h5>{profile.displayName}'s quotes collection</h5>\n                        <UserQuotes profile={profile}/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Profile;","/Users/boyeon/Desktop/quotes/src/Components/MyQuotes.js",["76"],"import React, { useEffect, useState } from \"react\";\nimport { db } from \"../fbase\";\nimport moment from \"moment\";\nimport ContentEditable from \"react-contenteditable\";\n\n\nconst MyQuotes = ({ userObj }) => {\n    const [myquotes, setMyQuotes] = useState([]);\n    const getQuotes = async () => {\n        await db.collection('quotes')\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .onSnapshot((shot) => {\n                const quotesArr = shot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id\n                }\n                ))\n                setMyQuotes(quotesArr);\n            })\n    }\n\n    useEffect(() => {\n        getQuotes();\n        \n    },[])\n    return (\n        <div className =\"profile-quote-list\">\n            <ul>\n                {myquotes.map((quote) => (\n                    <li key={quote.id}>\n                        <p className=\"profile-created-at\">{moment(quote.createdAt).format('LL')}</p>\n                        <ContentEditable\n                            className=\"profile-quote-content\"\n                            html={quote.quote}\n                            disabled={true}\n                        />\n                        <div className=\"profile-quote-origin\">\n                            <p className=\"profile-quote-author\">{quote.author}, </p>\n                            <p>『{quote.title}』</p>\n                            <p>p. {quote.page}</p>\n                        </div>\n                        <div className=\"comment-section\">\n                            <p>{quote.comment}</p>\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default MyQuotes","/Users/boyeon/Desktop/quotes/src/Components/UserQuotes.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"91","line":20,"column":15,"nodeType":"89","messageId":"90","endLine":20,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":22,"column":8,"nodeType":"94","endLine":22,"endColumn":10,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":26,"column":7,"nodeType":"94","endLine":26,"endColumn":9,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],["98"],["99"],["98"],["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'authorListEditModeChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'getQuotes'. Either include it or remove the dependency array.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [getProfile]",{"range":"106","text":"107"},"Update the dependencies array to be: [getQuotes]",{"range":"108","text":"109"},[708,710],"[getProfile]",[731,733],"[getQuotes]"]