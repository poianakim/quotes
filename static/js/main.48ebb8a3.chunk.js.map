{"version":3,"sources":["fbase.js","Routes/Auth.js","Routes/CreateAccount.js","Components/Quote.js","Routes/Home.js","Components/favoriteAuthorEdit.js","Components/MyQuotes.js","Routes/MyProfile.js","Components/UserQuotes.js","Routes/Profile.js","Components/Navigation.js","Components/Router.js","Components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","db","firestore","Auth","useState","email","setEmail","password","setPassword","signInError","setSignInError","onChange","event","target","name","value","onSubmit","a","preventDefault","signInWithEmailAndPassword","message","console","log","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","type","placeholder","required","onClick","to","id","CreateAccount","error","setError","history","useHistory","createUserWithEmailAndPassword","userUid","currentUser","uid","collection","doc","set","displayName","push","Quote","quoteObj","userObj","editMode","setEditMode","quote","newQuote","setNewQuote","author","newAuthor","setNewAuthor","title","newTitle","setNewTitle","onDetailChange","onUpdateSubmit","update","updatedAt","Date","now","onDeleteQuoteClick","window","confirm","delete","html","creatorId","moment","createdAt","format","disabled","page","comment","prev","Home","profiles","setQuote","setAuthor","setTitle","quotes","setQuotes","setPage","setComment","setProfiles","useEffect","orderBy","onSnapshot","snapshot","quotesArr","docs","map","data","add","maxLength","qt","FavoriteAuthorEdit","favAuthorObj","authorListEditMode","editedFavAuthor","setEditedFavAuthor","onDeleteAuthorClick","onSubmitEditedFavAuthor","favoriteAuthor","MyQuotes","myquotes","setMyQuotes","getQuotes","where","shot","MyProfile","setDisplayName","favAuthor","setFavAuthor","favAuthors","setFavAuthors","setAuthorListEditMode","getFavAuthors","favAuthorsArr","onProfileSubmit","get","then","response","batch","forEach","docRef","commit","updateProfile","onSubmitFavAuthor","toggleEditAuthorList","signOut","UserQuotes","profile","Profile","favWriters","setFavWriters","getProfile","writersdb","writer","Navigation","AppRouter","isLoggedIn","path","exact","from","App","init","setInit","setIsLoggedIn","setUserObj","getProfiles","profilesDb","onAuthStateChanged","user","getFullYear","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAeAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGV,IAAMC,EAAmBV,IACnBW,EAAcX,IAASY,OACvBC,EAAKb,IAASc,YCqEZC,EAnFF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEiBF,mBAAS,IAF1B,mBAERG,EAFQ,KAEEC,EAFF,OAGuBJ,mBAAS,IAHhC,mBAGRK,EAHQ,KAGKC,EAHL,KAITC,EAAW,SAACC,GAAW,IAAD,EACYA,EAA5BC,OAAUC,EADM,EACNA,KAAMC,EADA,EACAA,MACX,UAATD,EACAR,EAASS,GACO,aAATD,GACPN,EAAYO,IAGdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,sEAETL,EAAMM,iBAFG,SAGHnB,EAAYoB,2BACdd,EAAOE,GAJF,uDAMTG,EAAe,KAAMU,SACrBC,QAAQC,IAAI,KAAMF,SAPT,yDAAH,sDAURG,EAAa,uCAAG,WAAOX,GAAP,iBAAAK,EAAA,4DAGL,YAFKH,EAAWF,EAArBC,OAAUC,MAGdU,EAAW,IAAI1B,EAAiBE,KAAKyB,mBACrB,WAATX,IACPU,EAAW,IAAI1B,EAAiBE,KAAK0B,oBANvB,SASZ3B,EAAY4B,gBAAgBH,GAThB,2CAAH,sDA2BnB,OACI,sBAAKI,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACI,6CAAe,uBAAf,cAAgC,uBAAhC,uBAEJ,sBAAKA,UAAU,YAAf,UACI,uBAAMA,UAAU,sBAAsBZ,SAAUA,EAAhD,UACI,uBACIY,UAAU,kBACVjB,SAAUA,EACVG,KAAK,QAAQe,KAAK,QAAQC,YAAY,QACtCf,MAAOV,EAAO0B,UAAQ,IAC1B,sBAAKH,UAAU,kBAAf,UACI,uBACIjB,SAAUA,EACVG,KAAK,WACLe,KAAK,WAAWC,YAAY,WAC5Bf,MAAOR,EAAUwB,UAAQ,IAC7B,uBAAOF,KAAK,SAASd,MAAM,kBAGnC,sBAAKa,UAAU,kBAAf,UAEA,wBAAQI,QAAST,EAAeT,KAAK,SAArC,kCACA,wBAAQkB,QAAST,EAAeT,KAAK,SAArC,kCACA,cAAC,IAAD,CAAMmB,GAAG,iBAAT,SACI,uBAAOJ,KAAK,SAASd,MAAM,8BAG/B,oBAAImB,GAAG,gBAAP,SAAwBzB,WC7BzB0B,EAjDO,WAAO,IAAD,EACE/B,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,OAEQF,mBAAS,IAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,OAGEJ,mBAAS,IAHX,mBAGjBgC,EAHiB,KAGVC,EAHU,KAIlB1B,EAAW,SAACC,GAAW,IAAD,EACYA,EAA5BC,OAAUC,EADM,EACNA,KAAMC,EADA,EACAA,MACX,UAATD,EACAR,EAASS,GACO,aAATD,GACPN,EAAYO,IAGduB,EAAUC,cACVvB,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEAETL,EAAMM,iBAFG,SAGHnB,EAAYyC,+BACdnC,EAAOE,GAJF,cAMHkC,EAAU1C,EAAY2C,YAAYC,IAN/B,SAOH1C,EAAG2C,WAAW,YAAYC,IAAIJ,GAASK,IAAI,CAC7CzC,QAAOoC,UACPM,YAAa1C,IATR,uDAYTgC,EAAS,KAAMjB,SACfC,QAAQC,IAAR,MAbS,QAebgB,EAAQU,KAAK,KAfA,yDAAH,sDAiBd,OACI,8BACI,uBAAMhC,SAAUA,EAAhB,UACI,uBACIL,SAAUA,EACVG,KAAK,QAAQe,KAAK,QAAQC,YAAY,QACtCf,MAAOV,EAAO0B,UAAQ,IAC1B,uBACIpB,SAAUA,EACVG,KAAK,WACLe,KAAK,WAAWC,YAAY,WAC5Bf,MAAOR,EAAUwB,UAAQ,IAC7B,uBAAM,uBAAOF,KAAK,SAASd,MAAM,uBACjC,6BAAKqB,U,kCCkDNa,EA3FD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACL/C,oBAAS,GADJ,mBAC9BgD,EAD8B,KACpBC,EADoB,OAELjD,mBAAS8C,EAASI,OAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,OAGHpD,mBAAS8C,EAASO,QAHf,mBAG9BC,EAH8B,KAGnBC,EAHmB,OAILvD,mBAAS8C,EAASU,OAJb,mBAI9BC,EAJ8B,KAIpBC,EAJoB,KAU/BC,EAAiB,SAACnD,GAAW,IAAD,EACMA,EAA5BC,OAAUE,EADY,EACZA,MAAOD,EADK,EACLA,KACZ,UAATA,EACAgD,EAAY/C,GACI,WAATD,GACP6C,EAAa5C,IAGfiD,EAAc,uCAAG,WAAOpD,GAAP,SAAAK,EAAA,6DACnBL,EAAMM,iBADa,SAEbjB,EAAG4C,IAAH,kBAAkBK,EAAShB,KAAM+B,OAAO,CAC1CX,MAAOC,EACPE,OAAQC,EACRE,MAAOC,EACPK,UAAWC,KAAKC,QAND,OAQnBf,GAAY,GARO,2CAAH,sDAadgB,EAAkB,uCAAG,sBAAApD,EAAA,0DACRqD,OAAOC,QAAQ,2CADP,gCAGbtE,EAAG4C,IAAH,kBAAkBK,EAAShB,KAAMsC,SAHpB,kGAAH,qDAQxB,OACI,qBAAK5C,UAAU,cAAf,SACKwB,EAAY,mCACT,uBAAMpC,SAAUgD,EAAhB,UACI,cAAC,IAAD,CACIrD,SAtCE,SAACC,GAAW,IACZG,EAAYH,EAAtBC,OAAUE,MAClByC,EAAYzC,IAqCIa,UAAU,aACV6C,KAAMlB,IAEV,uBAAO5C,SAAUoD,EAAgBhD,MAAO2C,EACpC7B,KAAK,OAAOf,KAAK,SAASgB,YAAY,WAC1C,uBAAOnB,SAAUoD,EAAgBhD,MAAO8C,EACpChC,KAAK,OAAOf,KAAK,QAAQgB,YAAY,eACzC,uBAAOD,KAAK,SAASd,MAAM,0BAE5B,qCAEGoC,EAAQR,MAAQO,EAASwB,UAEnB,cAAC,IAAD,CAAM9C,UAAU,OAAOK,GAAE,WAAMiB,EAASwB,WAAxC,SACI,6BAAKxB,EAASH,gBAEjB,cAAC,IAAD,CAAMnB,UAAU,OAAOK,GAAG,WAA1B,SACD,6BAAKiB,EAASH,gBAItB,mBAAGb,GAAG,aAAN,SAAoByC,IAAOzB,EAAS0B,WAAWC,OAAO,QACtD,cAAC,IAAD,CACIjD,UAAU,gBACV6C,KAAMvB,EAASI,MACfwB,UAAU,IAEd,sBAAKlD,UAAU,eAAf,UACI,oBAAGM,GAAG,eAAN,UAAsBgB,EAASO,OAA/B,QACA,uCAAKP,EAASU,MAAd,YACA,oCAAOV,EAAS6B,WAEpB,qBAAKnD,UAAU,kBAAf,SACI,4BAAIsB,EAAS8B,YAEhB7B,EAAQR,MAAQO,EAASwB,WACrB,sBAAK9C,UAAU,gBAAf,UAA+B,wBAC5BI,QAtDF,WAClBqB,GAAY,SAAA4B,GAAI,OAAKA,MAoD2B,oBAE5B,wBACIjD,QAASqC,EADb,4BA3CcnB,EAAShB,KC0DpCgD,EAnGF,SAAC,GAA2B,IAAzB/B,EAAwB,EAAxBA,QAAwB,KAAfgC,SACK/E,mBAAS,KADC,mBAC7BkD,EAD6B,KACtB8B,EADsB,OAERhF,mBAAS,IAFD,mBAE7BqD,EAF6B,KAErB4B,EAFqB,OAGVjF,mBAAS,IAHC,mBAG7BwD,EAH6B,KAGtB0B,EAHsB,OAIRlF,mBAAS,IAJD,mBAI7BmF,EAJ6B,KAIrBC,EAJqB,OAKZpF,mBAAS,IALG,mBAK7B2E,EAL6B,KAKvBU,EALuB,OAMNrF,mBAAS,IANH,mBAM7B4E,EAN6B,KAMpBU,EANoB,KAO9BC,EAAW,uCAAG,gCAAA1E,EAAA,sEAENwB,EAAU1C,EAAY2C,YAAYC,IAClCI,EAAchD,EAAY2C,YAAYK,YACtC1C,EAAQN,EAAY2C,YAAYrC,MAJ1B,SAKNJ,EAAG2C,WAAW,YAAYC,IAAIJ,GAASK,IAAI,CAC7CzC,QACAoC,UACAM,gBARQ,uDAWZ1B,QAAQC,IAAR,MAXY,yDAAH,qDAcjBsE,qBAAU,WACPD,IACC1F,EAAG2C,WAAW,UAAUiD,QAAQ,YAAa,QACxCC,YAAW,SAACC,GACT,IAAMC,EAAYD,EAASE,KAAKC,KAAI,SAACrD,GAAD,mBAAC,eAC9BA,EAAIsD,QADyB,IAEhCjE,GAAIW,EAAIX,QAEZsD,EAAUQ,QAEnB,IACH,IAGMrF,EAAW,SAACC,GAAW,IAAD,EACYA,EAA5BC,OAAUC,EADM,EACNA,KAAMC,EADA,EACAA,MACX,WAATD,EACAuE,EAAUtE,GACM,UAATD,EACPwE,EAASvE,GACO,SAATD,EACP2E,EAAQ1E,GACQ,YAATD,GACP4E,EAAW3E,IAsBnB,OACI,sBAAKa,UAAU,YAAf,UACI,sBAAMA,UAAU,qBAAhB,kEACA,uBAAMZ,SAtBG,SAACJ,GACE0D,OAAOC,QAAQ,qCAE3B3D,EAAMM,iBACNjB,EAAG2C,WAAW,UAAUwD,IAAI,CACxB9C,QAAOG,SAAQG,QAAOmB,OAAMC,UAC5BJ,UAAWT,KAAKC,MAChBM,UAAWvB,EAAQR,IACnBI,YAAaI,EAAQJ,cAEzBqC,EAAS,IACTC,EAAU,IACVC,EAAS,IACTG,EAAQ,IACRC,EAAW,MAQX,UACI,cAAC,IAAD,CACI9D,UAAU,cACVjB,SAxCM,SAACC,GACnBwE,EAASxE,EAAMC,OAAOE,QAwCV0D,KAAMnB,IAEV,sBAAK1B,UAAU,mBAAf,UACI,uBAAOA,UAAU,oBAAoBM,GAAG,eAAevB,SAAUA,EAAUI,MAAO0C,EAC9E5B,KAAK,OAAOf,KAAK,SAASgB,YAAY,WAC1C,uBAAOF,UAAU,oBAAoBM,GAAG,cAAcvB,SAAUA,EAAUI,MAAO6C,EAC7E/B,KAAK,OAAOf,KAAK,QAAQgB,YAAY,eACzC,uBAAOF,UAAU,oBAAoBM,GAAG,aAAavB,SAAUA,EAAUI,MAAOgE,EAC5ElD,KAAK,OAAOf,KAAK,OAAOgB,YAAY,YAE5C,uBACA,sBAAKF,UAAU,qBAAf,UACI,uBAAOA,UAAU,sBAAsBM,GAAG,gBAAgBvB,SAAUA,EAAUkB,KAAK,OAAOC,YAAY,UAClGhB,KAAK,UAAUC,MAAOiE,EAASqB,UAAW,MAC9C,uBAAOzE,UAAU,oBAAoBM,GAAG,eAAeL,KAAK,SAASd,MAAM,eAGnF,qBAAKa,UAAU,MAAf,SACK2D,EAAOW,KAAI,SAACI,GAAD,OACR,cAAC,EAAD,CAAmBpD,SAAUoD,EAAInD,QAASA,GAA9BmD,EAAGpE,aC1DpBqE,EApCY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,mBAAyB,EACnBrG,mBAAS,IADU,mBAC1DsG,EAD0D,KACzCC,EADyC,KAO3DC,EAAmB,uCAAG,sBAAA3F,EAAA,sEAClBhB,EAAG4C,IAAH,qBAAqB2D,EAAatE,KAAMsC,SADtB,2CAAH,qDAGnBqC,EAAuB,uCAAG,WAAOjG,GAAP,SAAAK,EAAA,6DAC5BL,EAAMM,iBADsB,SAEtBjB,EAAG4C,IAAH,qBAAqB2D,EAAatE,KAAM+B,OAAO,CACjD6C,eAAgBJ,EAChBxC,UAAWC,KAAKC,QAJQ,OAM5BuC,EAAmB,IANS,2CAAH,sDAQ7B,OACI,sBAAK/E,UAAU,qBAAf,WACM6E,GACE,oBAAIvE,GAAG,kBAAP,SACI,6BAAKsE,EAAaM,mBAEzBL,GACI,uBAAMzF,SAAU6F,EAAhB,UACG,uBAAOlG,SAxBN,SAACC,GAAW,IACPG,EAAYH,EAAtBC,OAAUE,MAClB4F,EAAmB5F,IAsBoBA,MAAO2F,EAAiB7E,KAAK,OACpDC,YAAa0E,EAAaM,iBAC9B,wBAAQ5E,GAAG,oBAAoBF,QAAS4E,EAAxC,2BCsBLG,EA/CE,SAAC,GAAiB,IAAf5D,EAAc,EAAdA,QAAc,EACE/C,mBAAS,IADX,mBACvB4G,EADuB,KACbC,EADa,KAExBC,EAAS,uCAAG,sBAAAjG,EAAA,sEACRhB,EAAG2C,WAAW,UACfuE,MAAM,YAAa,KAAMhE,EAAQR,KACjCkD,QAAQ,aACRC,YAAW,SAACsB,GACT,IAAMpB,EAAYoB,EAAKnB,KAAKC,KAAI,SAACrD,GAAD,mBAAC,eAC1BA,EAAIsD,QADqB,IAE5BjE,GAAIW,EAAIX,QAGZ+E,EAAYjB,MAVN,2CAAH,qDAkBf,OAJAJ,qBAAU,WACNsB,MAEF,IAEE,qBAAKtF,UAAW,qBAAhB,SACI,6BACKoF,EAASd,KAAI,SAAC5C,GAAD,OACV,+BACI,mBAAG1B,UAAU,qBAAb,SAAmC+C,IAAOrB,EAAMsB,WAAWC,OAAO,QAClE,cAAC,IAAD,CACIjD,UAAU,wBACV6C,KAAMnB,EAAMA,MACZwB,UAAU,IAEd,sBAAKlD,UAAU,uBAAf,UACI,oBAAGA,UAAU,uBAAb,UAAqC0B,EAAMG,OAA3C,QACA,uCAAKH,EAAMM,MAAX,YACA,oCAAON,EAAMyB,WAEjB,qBAAKnD,UAAU,kBAAf,SACI,4BAAI0B,EAAM0B,cAbT1B,EAAMpB,YCsFpBmF,EA9GG,SAAC,GAAiB,IAAflE,EAAc,EAAdA,QAAc,EACO/C,mBAAS+C,EAAQJ,aADxB,mBACxBA,EADwB,KACXuE,EADW,OAEGlH,mBAAS,IAFZ,mBAExBmH,EAFwB,KAEbC,EAFa,OAGKpH,mBAAS,IAHd,mBAGxBqH,EAHwB,KAGZC,EAHY,OAIqBtH,oBAAS,GAJ9B,mBAIxBqG,EAJwB,KAIJkB,EAJI,KAMzBC,EAAa,uCAAG,sBAAA3G,EAAA,sEACZhB,EAAG2C,WAAW,cACfuE,MAAM,YAAa,KAAMpH,EAAY2C,YAAYC,KACjDkD,QAAQ,aACRC,YAAW,SAACsB,GACT,IAAMS,EAAgBT,EAAKnB,KAAKC,KAAI,SAACrD,GAAD,mBAAC,eAC9BA,EAAIsD,QADyB,IAEhCjE,GAAIW,EAAIX,QAEZwF,EAAcG,MATJ,2CAAH,qDAYnBjC,qBAAU,WACNgC,MACD,IACH,IAMME,EAAe,uCAAG,WAAOlH,GAAP,SAAAK,EAAA,6DACrBL,EAAMM,iBACLjB,EAAG2C,WAAW,UAAUuE,MAAM,YAAa,KAAMhE,EAAQR,KACxDoF,MAAMC,MAAK,SAAAC,GACR,IAAIC,EAAQjI,EAAGiI,QACfD,EAAShC,KAAKkC,SAAQ,SAACtF,GACnB,IAAMuF,EAASnI,EAAG2C,WAAW,UAAUC,IAAIA,EAAIX,IAC/CgG,EAAMjE,OAAOmE,EAAQ,CACjB,YAAgBrF,OAGxBmF,EAAMG,SAASL,MAAK,WAChB3G,QAAQC,IAAR,qCAZY,SAgBdvB,EAAY2C,YACjB4F,cAAc,CACXvF,gBACDiF,KAAK3G,QAAQC,IAAI,qCAnBA,2CAAH,sDAyBfiH,EAAiB,uCAAG,WAAO3H,GAAP,SAAAK,EAAA,6DACtBL,EAAMM,iBADgB,SAEhBjB,EAAG2C,WAAW,cAAcwD,IAAI,CAClCU,eAAgBS,EAChB7C,UAAWvB,EAAQR,IACnBiC,UAAWT,KAAKC,QALE,OAOtBoD,EAAa,IAPS,2CAAH,sDASjBlF,EAAUC,cAKViG,EAAuB,WACzBb,GAAsB,SAAA1C,GAAI,OAAKA,MAGnC,OACI,gCACI,qBAAIrD,UAAU,YAAd,UAA2BuB,EAAQJ,YAAnC,qBACA,sBAAKnB,UAAU,MAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,cAAd,iCAEC6F,EAAWvB,KAAI,SAACzC,GAAD,OACZ,cAAC,EAAD,CAAoC+C,aAAc/C,EAAQgD,mBAAoBA,GAArDhD,EAAOvB,OAEnCuE,EACG,sBAAK7E,UAAU,YAAf,UACI,uBAAMA,UAAU,MAAhB,UACI,uBACIjB,SApCF,SAACC,GAAW,IACpBG,EAAYH,EAAtBC,OAAUE,MAClByG,EAAazG,IAmCec,KAAK,OAAOf,KAAK,kBAAkBC,MAAOwG,EAAWzF,YAAY,0BACrE,uBAAOE,QAASuG,EAAmB1G,KAAK,SAASd,MAAM,cAE3D,wBAAQa,UAAU,0BAA0BI,QAASwG,EAArD,0BAEJ,wBAAQ5G,UAAU,sBAAsBI,QAASwG,EAAjD,0BAER,sBAAK5G,UAAU,iBAAf,UACI,+BAAKuB,EAAQJ,YAAb,0BACA,cAAC,EAAD,CAAUI,QAASA,UAG3B,uBAAMnC,SAAU8G,EAAiBlG,UAAU,mBAA3C,UACI,uBAAOC,KAAK,OAAOlB,SA7Ed,SAACC,GAAW,IAAD,EACYA,EAA5BC,OAAUC,EADM,EACNA,KAAMC,EADA,EACAA,MACX,gBAATD,GACAwG,EAAevG,IA2EPA,MAAOgC,EAAajC,KAAK,cACzBgB,YAAY,YAAYuE,UAAU,OACtC,uBACA,uBAAOnE,GAAG,sBAAsBL,KAAK,SAASd,MAAM,uBAGxD,uBACA,wBAAQmB,GAAG,WAAWF,QA5CP,WACnBjC,EAAY0I,UACZnG,EAAQU,KAAK,MA0CT,0BC1DG0F,EAhDI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACAvI,mBAAS,IADT,mBACzB4G,EADyB,KACfC,EADe,KAE1BC,EAAS,uCAAG,sBAAAjG,EAAA,sEACRhB,EAAG2C,WAAW,UACfiD,QAAQ,aACRC,YAAW,SAACsB,GACT,IAAMpB,EAAYoB,EAAKnB,KAAKC,KAAI,SAACrD,GAAD,mBAAC,eAC1BA,EAAIsD,QADqB,IAE5BjE,GAAIW,EAAIX,QAGZ+E,EAAYjB,MATN,2CAAH,qDAiBf,OAJAJ,qBAAU,WACNsB,MAED,IAEC,qBAAKtF,UAAW,qBAAhB,SACI,6BACKoF,EAASd,KAAI,SAAC5C,GAAD,OACV,6BAEKA,EAAMoB,YAAciE,EAAQlG,SAAY,qCACrC,mBAAGb,UAAU,qBAAb,SAAmC+C,IAAOrB,EAAMsB,WAAWC,OAAO,QAClE,cAAC,IAAD,CACIjD,UAAU,wBACV6C,KAAMnB,EAAMA,MACZwB,UAAU,IAEd,sBAAKlD,UAAU,uBAAf,UACI,oBAAGA,UAAU,uBAAb,UAAqC0B,EAAMG,OAA3C,QACA,uCAAKH,EAAMM,MAAX,YACA,oCAAON,EAAMyB,WAEjB,qBAAKnD,UAAU,kBAAf,SACI,4BAAI0B,EAAM0B,gBAfb1B,EAAMpB,YCiBpB0G,EA1CC,SAAC,GAA0B,IAAxBD,EAAuB,EAAvBA,QAAuB,KAAdxF,QACY/C,mBAAS,KADP,mBAC/ByI,EAD+B,KACnBC,EADmB,KAEhCC,EAAU,uCAAG,sBAAA9H,EAAA,sEACThB,EAAG2C,WAAW,cACfuE,MAAM,YAAa,KAAMwB,EAAQzG,IACjC2D,QAAQ,aACRC,YAAW,SAACsB,GACT,IAAM4B,EAAY5B,EAAKnB,KAAKC,KAAI,SAACrD,GAAD,mBAAC,eAC1BA,EAAIsD,QADqB,IAE5BjE,GAAIW,EAAIX,QAGZ4G,EAAcE,MAVP,2CAAH,qDAgBhB,OAHApD,qBAAU,WACNmD,MACD,IAEC,gCACI,qBAAInH,UAAU,YAAd,UAA2B+G,EAAQ5F,YAAnC,qBAEA,sBAAKnB,UAAU,MAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,gCACI,qBAAIA,UAAU,cAAd,UAA6B+G,EAAQ5F,YAArC,yBACA,6BACK8F,EAAW3C,KAAI,SAAA+C,GAAM,OAClB,6BAAqBA,EAAOnC,gBAAnBmC,EAAO/G,cAMhC,sBAAKN,UAAU,iBAAf,UACI,+BAAK+G,EAAQ5F,YAAb,0BACI,cAAC,EAAD,CAAY4F,QAASA,cC3B9BO,EAVI,WACf,OACI,qBAAItH,UAAU,aAAd,UACI,6BAAI,cAAC,IAAD,CAAMA,UAAU,OAAOK,GAAG,IAA1B,oBACJ,6BAAI,cAAC,IAAD,CAAML,UAAU,OAAOK,GAAG,WAA1B,6BC2CDkH,EAzCG,SAAC,GAAuC,IAArChE,EAAoC,EAApCA,SAAUiE,EAA0B,EAA1BA,WAAYjG,EAAc,EAAdA,QACjCwF,EAAUxD,EAASe,KAAI,SAACyC,GAAD,OACzB,cAAC,IAAD,CAAwBU,KAAI,WAAMV,EAAQzG,IAA1C,SACI,cAAC,EAAD,CAASyG,QAASA,EAASxF,QAASA,KAD5BwF,EAAQzG,OAKxB,OACI,eAAC,IAAD,WACKkH,GAAc,cAAC,EAAD,CAAYjG,QAASA,IACpC,cAAC,IAAD,UACKiG,EACG,qCACI,cAAC,IAAD,CAAOE,OAAK,EAACD,KAAK,IAAlB,SACI,cAAC,EAAD,CACAlG,QAASA,EACTgC,SAAUA,MAEbwD,EAKD,cAAC,IAAD,CAAOW,OAAK,EAACD,KAAK,WAAlB,SACI,cAAC,EAAD,CAAWlG,QAASA,SAGpB,qCACJ,cAAC,IAAD,CAAOmG,OAAK,EAACD,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,iBAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAUE,KAAK,IAAItH,GAAG,eCG/BuH,EA1CH,WAAO,IAAD,EACQpJ,oBAAS,GADjB,mBACTqJ,EADS,KACHC,EADG,OAEoBtJ,oBAAS,GAF7B,mBAETgJ,EAFS,KAEGO,EAFH,OAGcvJ,mBAAS,MAHvB,mBAGT+C,EAHS,KAGAyG,EAHA,OAIgBxJ,mBAAS,IAJzB,mBAIT+E,EAJS,KAICQ,EAJD,KAKVkE,EAAW,uCAAG,sBAAA5I,EAAA,sEACZhB,EAAG2C,WAAW,YACXkD,YAAW,SAACC,GACT,IAAM+D,EAAa/D,EAASE,KAAKC,KAAI,SAACrD,GAAD,mBAAC,eAC/BA,EAAIsD,QAD0B,IAEjCjE,GAAIW,EAAIX,QAEZyD,EAAYmE,MAPN,2CAAH,qDAwBjB,OAdAlE,qBAAU,WACR7F,EAAYgK,oBAAmB,SAACC,GAC1BA,GACFL,GAAc,GACdC,EAAWI,IAEXL,GAAc,GAEhBD,GAAQ,MAEVG,MAEA,IAGA,sBAAKjI,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,sBACC6H,EAAO,cAAC,EAAD,CAAWtE,SAAUA,EAAUhC,QAASA,EAASiG,WAAYA,IAAiB,eACtF,oDACkB,IAAIjF,MAAO8F,cAC3B,uBAFF,MAEU,mBAAGpJ,OAAO,SAASqJ,IAAI,aAAaC,KAAK,+BAAzC,+B,MCnChBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.48ebb8a3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAef8qIjnu82MunJScf7VzoLq1F2bm9YQo\",\n  authDomain: \"quotes-6d35f.firebaseapp.com\",\n  databaseURL: \"https://quotes-6d35f.firebaseio.com\",\n  projectId: \"quotes-6d35f\",\n  storageBucket: \"quotes-6d35f.appspot.com\",\n  messagingSenderId: \"419429076627\",\n  appId: \"1:419429076627:web:b624052634b1dbdf980766\",\n  measurementId: \"G-H46M93ZX50\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const db = firebase.firestore()","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [signInError, setSignInError] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n    const onSubmit = async (event) => {\n        try {\n            event.preventDefault();\n            await authService.signInWithEmailAndPassword(\n                email, password)\n        } catch (error) {\n            setSignInError(error.message);\n            console.log(error.message);\n        }\n    }\n    const onSocialClick = async (event) => {\n        const { target: { name } } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n\n        }\n        await authService.signInWithPopup(provider)\n        // .then((result) => {\n        //     const user = result.user;\n        //     const credential = result.credential;\n        // }, (error) => {\n        //     const email = error.email;\n        //     const credential = error.credential;\n        //     if (error.code === 'auth/account-exists-with-different-credential') {\n        //         authService.fetchSignInMethodsForEmail(email).then((providers) => { })\n        //     }\n        // })\n        // const userUid = authService.currentUser.uid;\n        // const displayName = authService.currentUser.displayName;\n        // const email = authService.currentUser.email;\n        // await db.collection('profiles').doc(userUid).set({\n        //     email, userUid, displayName,\n        // })\n    }\n    return (\n        <div className=\"landing\">\n            <div className=\"landingpage\">\n                <h4>\"Sometimes <br /> the Books <br /> Speak for you\"</h4>\n            </div>\n            <div className=\"auth-form\">\n                <form className=\"auth-form-container\" onSubmit={onSubmit}>\n                    <input\n                        className=\"auth-form-1 row\"\n                        onChange={onChange}\n                        name=\"email\" type=\"email\" placeholder=\"Email\"\n                        value={email} required />\n                    <div className=\"auth-form-2 row\">\n                        <input\n                            onChange={onChange}\n                            name=\"password\"\n                            type=\"password\" placeholder=\"Password\"\n                            value={password} required />\n                        <input type=\"submit\" value=\"Sign In\" />\n                    </div>\n                </form>\n                <div className=\"create-acc-btns\">\n                \n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n                <Link to=\"/createaccount\">\n                    <input type=\"submit\" value=\" Sign Up with Email \" />\n                </Link>\n                </div>\n                <h3 id=\"error-message\">{signInError}</h3>\n            </div>\n        </div>\n    )\n}\nexport default Auth;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, db} from \"../fbase\";\n\nconst CreateAccount = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n    const history = useHistory();\n    const onSubmit = async (event) => {\n        try {\n            event.preventDefault();\n            await authService.createUserWithEmailAndPassword(\n                email, password\n            )\n            const userUid = authService.currentUser.uid;\n            await db.collection('profiles').doc(userUid).set({\n                email, userUid,\n                displayName: email,\n            })\n        } catch (error) {\n            setError(error.message)\n            console.log(error)\n        }\n        history.push(\"/\")\n    }\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    name=\"email\" type=\"email\" placeholder=\"Email\"\n                    value={email} required />\n                <input\n                    onChange={onChange}\n                    name=\"password\"\n                    type=\"password\" placeholder=\"Password\"\n                    value={password} required />\n                <br /><input type=\"submit\" value=\"Create New Account\" />\n                <h3>{error}</h3>\n            </form>\n        </div>\n    )\n};\n\nexport default CreateAccount;","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport { Link } from \"react-router-dom\";\nimport { db } from \"../fbase\";\n\nconst Quote = ({ quoteObj, userObj }) => {\n    const [editMode, setEditMode] = useState(false);\n    const [newQuote, setNewQuote] = useState(quoteObj.quote);\n    const [newAuthor, setNewAuthor] = useState(quoteObj.author);\n    const [newTitle, setNewTitle] = useState(quoteObj.title);\n\n    const onQuoteChange = (event) => {\n        const { target: { value } } = event;\n        setNewQuote(value);\n    }\n    const onDetailChange = (event) => {\n        const { target: { value, name } } = event;\n        if (name === \"title\") {\n            setNewTitle(value)\n        } else if (name === \"author\") {\n            setNewAuthor(value)\n        }\n    }\n    const onUpdateSubmit = async (event) => {\n        event.preventDefault();\n        await db.doc(`/quotes/${quoteObj.id}`).update({\n            quote: newQuote,\n            author: newAuthor,\n            title: newTitle,\n            updatedAt: Date.now()\n        })\n        setEditMode(false);\n    }\n    const onUpdateClick = () => {\n        setEditMode(prev => !prev)\n    }\n    const onDeleteQuoteClick = async () => {\n        const conmsg = window.confirm('Are you sure about deleting this quote?')\n        if (conmsg) {\n            await db.doc(`/quotes/${quoteObj.id}`).delete()\n        } else {\n            return;\n        }\n    }\n    return (\n        <div className=\"quotes-list\" key={quoteObj.id} >\n            {editMode ? (<>\n                <form onSubmit={onUpdateSubmit}>\n                    <ContentEditable\n                        onChange={onQuoteChange}\n                        className=\"quote-edit\"\n                        html={newQuote}\n                    />\n                    <input onChange={onDetailChange} value={newAuthor}\n                        type=\"text\" name=\"author\" placeholder=\"AUTHOR\" />\n                    <input onChange={onDetailChange} value={newTitle}\n                        type=\"text\" name=\"title\" placeholder=\"BOOK TITLE\" />\n                    <input type=\"submit\" value=\"Save this Update\" /></form>\n            </>)\n                : (<>\n\n                    { userObj.uid !== quoteObj.creatorId ?\n                        (\n                            <Link className=\"link\" to={`/${quoteObj.creatorId}`}>\n                                <h4>{quoteObj.displayName}</h4>\n                            </Link>\n                        ) : (<Link className=\"link\" to=\"/profile\">\n                            <h4>{quoteObj.displayName}</h4>\n                        </Link>\n                        )}\n\n                    <p id=\"created-at\">{moment(quoteObj.createdAt).format('LL')}</p>\n                    <ContentEditable\n                        className=\"quote-content\"\n                        html={quoteObj.quote}\n                        disabled={true}\n                    />\n                    <div className=\"quote-origin\">\n                        <p id=\"quote-author\">{quoteObj.author}, </p>\n                        <p>『{quoteObj.title}』</p>\n                        <p>p. {quoteObj.page}</p>\n                    </div>\n                    <div className=\"comment-section\">\n                        <p>{quoteObj.comment}</p>\n                    </div>\n                    {userObj.uid === quoteObj.creatorId &&\n                        (<div className=\"quote-buttons\"><button\n                            onClick={onUpdateClick}>Update</button>\n                            <button\n                                onClick={onDeleteQuoteClick}> Delete</button>\n                        </div>)}\n                </>)}\n        </div>\n    )\n}\n\nexport default Quote;","import React, { useEffect, useState } from \"react\";\nimport { authService, db } from \"../fbase\";\nimport ContentEditable from \"react-contenteditable\";\nimport Quote from \"../Components/Quote\";\n\nconst Home = ({ userObj, profiles }) => {\n    const [quote, setQuote] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [quotes, setQuotes] = useState([]);\n    const [page, setPage] = useState(\"\");\n    const [comment, setComment] = useState(\"\");\n    const setProfiles = async () => {\n        try {\n            const userUid = authService.currentUser.uid;\n            const displayName = authService.currentUser.displayName;\n            const email = authService.currentUser.email;\n            await db.collection('profiles').doc(userUid).set({\n                email,\n                userUid,\n                displayName,\n            })\n        } catch(e){\n            console.log(e);\n        }\n    }\n    useEffect(() => {\n       setProfiles();\n        db.collection(\"quotes\").orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const quotesArr = snapshot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id,\n                }))\n                setQuotes(quotesArr);\n            })\n    }, [])\n    const onInputChange = (event) => {\n        setQuote(event.target.value)\n    }\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"author\") {\n            setAuthor(value)\n        } else if (name === \"title\") {\n            setTitle(value)\n        } else if (name === \"page\") {\n            setPage(value)\n        } else if (name === \"comment\") {\n            setComment(value)\n        }\n    }\n    const onSubmit = (event) => {\n        const confmsg = window.confirm('Do you want to post this quote?')\n        if (confmsg) {\n            event.preventDefault();\n            db.collection(\"quotes\").add({\n                quote, author, title, page, comment,\n                createdAt: Date.now(),\n                creatorId: userObj.uid,\n                displayName: userObj.displayName,\n            })\n            setQuote(\"\");\n            setAuthor(\"\");\n            setTitle(\"\");\n            setPage(\"\");\n            setComment(\"\");\n        } else {\n            return;\n        }\n    }\n    return (\n        <div className=\"container\">\n            <span className=\"share-quotes-label\">📖 Share Your Favorite Quotes 🖋</span>\n            <form onSubmit={onSubmit}>\n                <ContentEditable\n                    className=\"quote-input\"\n                    onChange={onInputChange}\n                    html={quote}\n                />\n                <div className=\"row input-detail\">\n                    <input className=\"col-xs-6 col-md-3\" id=\"author-input\" onChange={onChange} value={author}\n                        type=\"text\" name=\"author\" placeholder=\"AUTHOR\" />\n                    <input className=\"col-xs-8 col-md-6\" id=\"title-input\" onChange={onChange} value={title}\n                        type=\"text\" name=\"title\" placeholder=\"BOOK TITLE\" />\n                    <input className=\"col-xs-4 col-md-2\" id=\"page-input\" onChange={onChange} value={page}\n                        type=\"text\" name=\"page\" placeholder=\"PAGE\"/>\n                </div>\n                <br />\n                <div className=\"row input-personal\">\n                    <input className=\"col-xs-12 col-md-10\" id=\"comment-input\" onChange={onChange} type=\"text\" placeholder=\"COMMENT\"\n                        name=\"comment\" value={comment} maxLength={140} />\n                    <input className=\"col-xs-6 col-md-1\" id=\"quote-submit\" type=\"submit\" value=\"post\" />\n                </div>\n            </form>\n            <div className=\"row\">\n                {quotes.map((qt) => (\n                    <Quote key={qt.id} quoteObj={qt} userObj={userObj} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n\n\n/* **OLD VERSION AND RE RENDER SEVERL TIMES\n   const getQuotes = async () => {\n       const quotesdb = await db.collection(\"quotes\")\n           .orderBy(\"createdAt\", \"asc\")\n           .get();\n       quotesdb.forEach((document) => {\n           const quoteObj = {\n               ...document.data(),\n               id: document.id,\n           }\n           setQuotes((prev) => [quoteObj, ...prev]);\n       });\n   }\n   USING ON SNAP SHOT RENDDERS ONLY ONE TIME and it makes page faster and it funcions in realtime!!.*/","import React, { useState } from \"react\";\nimport { db } from \"../fbase\";\n\nconst FavoriteAuthorEdit = ({ favAuthorObj, authorListEditMode }) => {\n    const [editedFavAuthor, setEditedFavAuthor] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setEditedFavAuthor(value);\n    }\n\n    const onDeleteAuthorClick = async () => {\n        await db.doc(`fav-author/${favAuthorObj.id}`).delete()\n    }\n    const onSubmitEditedFavAuthor = async (event) => {\n        event.preventDefault();\n        await db.doc(`fav-author/${favAuthorObj.id}`).update({\n            favoriteAuthor: editedFavAuthor,\n            updatedAt: Date.now(),\n        })\n        setEditedFavAuthor(\"\")\n    }\n    return (\n        <div className=\"profile-fav-author\">\n            {!authorListEditMode &&\n                <ul id=\"fav-author-list\">\n                    <li>{favAuthorObj.favoriteAuthor}</li>\n                </ul>}\n            {authorListEditMode &&\n                (<form onSubmit={onSubmitEditedFavAuthor}>\n                    <input onChange={onChange} value={editedFavAuthor} type=\"text\"\n                        placeholder={favAuthorObj.favoriteAuthor} />\n                    <button id=\"delete-fav-author\" onClick={onDeleteAuthorClick}>Delete</button>\n                </form>\n                )\n            }\n        </div>\n    )\n}\n\nexport default FavoriteAuthorEdit","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../fbase\";\nimport moment from \"moment\";\nimport ContentEditable from \"react-contenteditable\";\n\n\nconst MyQuotes = ({ userObj }) => {\n    const [myquotes, setMyQuotes] = useState([]);\n    const getQuotes = async () => {\n        await db.collection('quotes')\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .onSnapshot((shot) => {\n                const quotesArr = shot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id\n                }\n                ))\n                setMyQuotes(quotesArr);\n            })\n    }\n\n    useEffect(() => {\n        getQuotes();\n        \n    },[])\n    return (\n        <div className =\"profile-quote-list\">\n            <ul>\n                {myquotes.map((quote) => (\n                    <li key={quote.id}>\n                        <p className=\"profile-created-at\">{moment(quote.createdAt).format('LL')}</p>\n                        <ContentEditable\n                            className=\"profile-quote-content\"\n                            html={quote.quote}\n                            disabled={true}\n                        />\n                        <div className=\"profile-quote-origin\">\n                            <p className=\"profile-quote-author\">{quote.author}, </p>\n                            <p>『{quote.title}』</p>\n                            <p>p. {quote.page}</p>\n                        </div>\n                        <div className=\"comment-section\">\n                            <p>{quote.comment}</p>\n                        </div>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default MyQuotes","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport FavoriteAuthorEdit from \"../Components/favoriteAuthorEdit\";\nimport MyQuotes from \"../Components/MyQuotes\";\nimport { authService, db } from \"../fbase\";\n\nconst MyProfile = ({ userObj }) => {\n    const [displayName, setDisplayName] = useState(userObj.displayName);\n    const [favAuthor, setFavAuthor] = useState(\"\");\n    const [favAuthors, setFavAuthors] = useState([]);\n    const [authorListEditMode, setAuthorListEditMode] = useState(false);\n\n    const getFavAuthors = async () => {\n        await db.collection('fav-author')\n            .where(\"creatorId\", \"==\", authService.currentUser.uid)\n            .orderBy(\"createdAt\")\n            .onSnapshot((shot) => {\n                const favAuthorsArr = shot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id\n                }))\n                setFavAuthors(favAuthorsArr)\n            })\n    }\n    useEffect(() => {\n        getFavAuthors();\n    }, [])\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"displayname\") {\n            setDisplayName(value)\n        }\n    } \n    const onProfileSubmit = async (event) => {\n       event.preventDefault();\n        db.collection('quotes').where('creatorId', \"==\", userObj.uid)\n        .get().then(response => {\n            let batch = db.batch()\n            response.docs.forEach((doc) => {\n                const docRef = db.collection('quotes').doc(doc.id)\n                batch.update(docRef, {\n                    \"displayName\" : displayName,\n                })\n            })\n            batch.commit().then(() => {\n                console.log(`updated quotes' displayname`)\n            })\n        })\n\n        await authService.currentUser\n        .updateProfile({\n            displayName,\n        }).then(console.log(\"auth profile displayname changed\"))\n    }\n    const handleFavAuthorChange = (event) => {\n        const { target: { value } } = event;\n        setFavAuthor(value);\n    }\n    const onSubmitFavAuthor = async (event) => {\n        event.preventDefault();\n        await db.collection('fav-author').add({\n            favoriteAuthor: favAuthor,\n            creatorId: userObj.uid,\n            createdAt: Date.now(),\n        })\n        setFavAuthor(\"\");\n    }\n    const history = useHistory();\n    const onSignOutClick = () => {\n        authService.signOut();\n        history.push(\"/\")\n    }\n    const toggleEditAuthorList = () => {\n        setAuthorListEditMode(prev => !prev)\n    }\n\n    return (\n        <div>\n            <h4 className=\"user-name\">{userObj.displayName}'s profile page</h4>\n            <div className=\"box\">\n                <div className=\"profile-fav-author\">\n                    <h5 className=\"fav-authors\">My Favorite Writers</h5>\n\n                    {favAuthors.map((author) =>\n                        <FavoriteAuthorEdit key={author.id} favAuthorObj={author} authorListEditMode={authorListEditMode} />\n                    )}\n                    {authorListEditMode ?\n                        <div className=\"container\">\n                            <form className=\"row\" >\n                                <input\n                                    onChange={handleFavAuthorChange}\n                                    type=\"text\" name=\"favorite-author\" value={favAuthor} placeholder=\"Add a favorite author\" />\n                                <input onClick={onSubmitFavAuthor} type=\"submit\" value=\"Submit\" />\n                            </form>\n                            <button className=\"fav-author-edit-btn row\" onClick={toggleEditAuthorList}>Edit Done</button>\n                        </div> :\n                        <button className=\"fav-author-edit-btn\" onClick={toggleEditAuthorList}>Edit List</button>}\n                </div>\n                <div className=\"profile-quotes\">\n                    <h5>{userObj.displayName}'s quotes collection</h5>\n                    <MyQuotes userObj={userObj} />\n                </div>\n            </div>\n            <form onSubmit={onProfileSubmit} className=\"profile-edit row\">\n                <input type=\"text\" onChange={onChange}\n                    value={displayName} name=\"displayname\"\n                    placeholder=\"User Name\" maxLength=\"10\" />\n                <br />\n                <input id=\"username-update-btn\" type=\"submit\" value=\"Update Username\" />\n            </form>\n\n            <br />\n            <button id=\"sign-out\" onClick={onSignOutClick} >Sign Out</button>\n        </div>\n    )\n}\nexport default MyProfile;","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../fbase\";\nimport moment from \"moment\";\nimport ContentEditable from \"react-contenteditable\";\n\n\nconst UserQuotes = ({ profile }) => {\n    const [myquotes, setMyQuotes] = useState([]);\n    const getQuotes = async () => {\n        await db.collection('quotes')\n            .orderBy(\"createdAt\")\n            .onSnapshot((shot) => {\n                const quotesArr = shot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id\n                }\n                ))\n                setMyQuotes(quotesArr);\n            })\n    }\n\n    useEffect(() => {\n        getQuotes();\n        \n    }, [])\n    return (\n        <div className =\"profile-quote-list\">\n            <ul>\n                {myquotes.map((quote) => (\n                    <li key={quote.id}>\n\n                        {quote.creatorId === profile.userUid && (<>\n                            <p className=\"profile-created-at\">{moment(quote.createdAt).format('LL')}</p>\n                            <ContentEditable\n                                className=\"profile-quote-content\"\n                                html={quote.quote}\n                                disabled={true}\n                            />\n                            <div className=\"profile-quote-origin\">\n                                <p className=\"profile-quote-author\">{quote.author}, </p>\n                                <p>『{quote.title}』</p>\n                                <p>p. {quote.page}</p>\n                            </div>\n                            <div className=\"comment-section\">\n                                <p>{quote.comment}</p>\n                            </div></>)}\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default UserQuotes","import React, { useEffect, useState } from \"react\";\nimport UserQuotes from \"../Components/UserQuotes\";\nimport { db } from \"../fbase\";\n\nconst Profile = ({ profile, userObj }) => {\n    const [favWriters, setFavWriters] = useState([]);\n    const getProfile = async () => {\n        await db.collection('fav-author')\n            .where(\"creatorId\", \"==\", profile.id)\n            .orderBy(\"createdAt\")\n            .onSnapshot((shot) => {\n                const writersdb = shot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id\n                }\n                ))\n                setFavWriters(writersdb)\n            })\n    }\n    useEffect(() => {\n        getProfile();\n    }, [])\n    return (\n        <div>\n            <h4 className=\"user-name\">{profile.displayName}'s profile page</h4>\n\n            <div className=\"box\">\n                <div className=\"profile-fav-author\">\n                    <div>\n                        <h5 className=\"fav-authors\">{profile.displayName}'s Favorite Writers</h5>\n                        <ul>\n                            {favWriters.map(writer => (\n                                <li key={writer.id}>{writer.favoriteAuthor}</li>\n                            ))\n                            }\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"profile-quotes\">\n                    <h5>{profile.displayName}'s quotes collection</h5>\n                        <UserQuotes profile={profile}/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n    return (\n        <ul className=\"navigation\">\n            <li><Link className=\"link\" to=\"/\">Home</Link></li>\n            <li><Link className=\"link\" to=\"/profile\" >MyProfile</Link></li>\n        </ul>\n    )\n\n}\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../Routes/Auth\";\nimport CreateAccount from \"../Routes/CreateAccount\";\nimport Home from \"../Routes/Home\";\nimport MyProfile from \"../Routes/MyProfile\";\nimport Profile from \"../Routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ profiles, isLoggedIn, userObj }) => {\n    const profile = profiles.map((profile) => (\n        <Route key={profile.id} path={`/${profile.id}`}>\n            <Profile profile={profile} userObj={userObj}/>\n        </Route>\n    ))\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home \n                            userObj={userObj}\n                            profiles={profiles} />\n                        </Route>\n                        {profile}\n                        {/* <Route >\n                            <Profile />\n                        </Route> */}\n\n                        <Route exact path=\"/profile\">\n                            <MyProfile userObj={userObj} />\n                        </Route>\n                        {/* <Redirect from=\"*\" to=\"/\" /> */}\n                    </>) : (<>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                        <Route exact path=\"/createaccount\">\n                            <CreateAccount />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </>)}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, db } from \"../fbase\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [profiles, setProfiles] = useState([]);\n  const getProfiles = async() => {\n    await db.collection(\"profiles\")\n            .onSnapshot((snapshot) => {\n                const profilesDb = snapshot.docs.map((doc) => ({\n                    ...doc.data(),\n                    id: doc.id,\n                }))\n                setProfiles(profilesDb);\n            })\n  }\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true);\n    });\n    getProfiles()\n  }\n  , []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"appTitle\">\"Quotes\"</h1>\n      {init ? <AppRouter profiles={profiles} userObj={userObj} isLoggedIn={isLoggedIn} /> : \"Inizializing\"}\n      <footer>\n        &copy;\"Quotes\" {new Date().getFullYear()}\n        <br/>by <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/poianakim\">POIANA KIM</a>\n      </footer>\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./styles.css\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}